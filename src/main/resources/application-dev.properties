spring.jpa.database=MYSQL
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#Usa as variáveis de ambiente do Intellij
spring.datasource.url=${MYSQL_DATABASE_URL}
spring.datasource.username=${MYSQL_USERNAME}
spring.datasource.password=${MYSQL_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

api-analise.host=${API_ANALISE}
api-cartoes.host=${API_CARTOES}

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI}

#Actuator
management.endpoints.prometheus.enabled=true
management.endpoints.web.exposure.include=info,health,prometheus
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO}
management.metrics.tags.ambiente=${AMBIENTE}
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.exclude=env,beans
opentracing.spring.cloud.feign.enabled=false


# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name}
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}